---
stages:
  - build
  - vendor upload

variables:
  CLOUD_IMAGE_BUILD_ID: ${CI_PROJECT_NAMESPACE}-${CI_COMMIT_REF_SLUG}

before_script:
  - apt-get update
  - apt-get install --no-install-recommends -y python3-libcloud qemu-utils

.build:
  stage: build
  image: debian:buster
  script:
    - >
      apt-get install --no-install-recommends -y
      binfmt-support ca-certificates debsums dosfstools fai-server fai-setup-storage make python3-pytest qemu-user-static qemu-utils udev
    - |
      if [ "$CI_DISPOSABLE_ENVIRONMENT" ]; then
        # Some of our build environments run with SELinux enabled, make sure it is detected by all the tools
        if [ -d /sys/fs/selinux ]; then mount -t selinuxfs none /sys/fs/selinux; mkdir -p /etc/selinux; touch /etc/selinux/config; fi
      fi
    - >
      echo
      debian-cloud-images build
      --build-id ${CLOUD_IMAGE_BUILD_ID}
      --build-type ${CLOUD_IMAGE_TYPE}
      --version ${CI_PIPELINE_IID}
      ${CLOUD_RELEASE} ${CLOUD_VENDOR} ${CLOUD_ARCH}
    - >
      ./bin/debian-cloud-images build
      --build-id ${CLOUD_IMAGE_BUILD_ID}
      --build-type ${CLOUD_IMAGE_TYPE}
      ${CLOUD_RELEASE} ${CLOUD_VENDOR} ${CLOUD_ARCH}
    - 'xz -vk5T0 *.tar'
  artifacts:
    name: debian-${CLOUD_RELEASE}-${CLOUD_VENDOR}-${CLOUD_ARCH}
    expire_in: 7 days
    paths:
      - '*.build.json'
      - '*.info'
      - '*.tar.xz'

####
# Different selections when builds will be done
####

.build dev pushes:
  extends: .build
  only:
    - pushes
  variables:
    CLOUD_IMAGE_TYPE: dev

.build dev web:
  extends: .build
  only:
    - web
  variables:
    CLOUD_IMAGE_TYPE: dev

.build official:
  extends: .build
  only:
    - schedules@cloud-team/debian-cloud-images
    - triggers@cloud-team/debian-cloud-images
  tags:
    - debian-cloud-images-build
  variables:
    CLOUD_IMAGE_TYPE: official

####
# Builds for developer uploads pushes
####

azure stretch build: &build-azure-stretch
  extends: .build dev web
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: stretch
    CLOUD_VENDOR: azure

azure stretch-backports build: &build-azure-stretch-backports
  extends: .build dev web
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: stretch-backports
    CLOUD_VENDOR: azure

azure buster build: &build-azure-buster
  extends: .build dev web
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: azure
  # no waagent in buster
  allow_failure: true

azure sid build: &build-azure-sid
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: azure

ec2 stretch amd64 build: &build-ec2-amd64-stretch
  extends: .build dev web
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: stretch
    CLOUD_VENDOR: ec2

ec2 buster amd64 build: &build-ec2-amd64-buster
  extends: .build dev web
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: ec2

ec2 sid amd64 build: &build-ec2-amd64-sid
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: ec2

ec2 stretch arm64 build: &build-ec2-arm64-stretch
  extends: .build dev web
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: stretch
    CLOUD_VENDOR: ec2

ec2 buster arm64 build: &build-ec2-arm64-buster
  extends: .build dev web
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: ec2

ec2 sid arm64 build: &build-ec2-arm64-sid
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: ec2

gce stretch build: &build-gce-stretch
  extends: .build dev web
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: stretch
    CLOUD_VENDOR: gce

gce buster build: &build-gce-buster
  extends: .build dev web
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: gce

gce sid build: &build-gce-sid
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: gce

nocloud stretch amd64 build: &build-nocloud-stretch-amd64
  extends: .build dev web
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: stretch
    CLOUD_VENDOR: nocloud

nocloud buster amd64 build: &build-nocloud-buster-amd64
  extends: .build dev web
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: nocloud

nocloud sid amd64 build: &build-nocloud-sid-amd64
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: nocloud

nocloud sid arm64 build: &build-nocloud-sid-arm64
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: nocloud

nocloud sid ppc64el build: &build-nocloud-sid-ppc64el
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: ppc64el
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: nocloud
  # is just built for test purposes
  allow_failure: true

openstack buster amd64 build: &build-openstack-buster-amd64
  extends: .build dev web
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: openstack

openstack sid amd64 build: &build-openstack-sid-amd64
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: openstack

####
# Official builds done on Debian hardware
####

azure stretch build official:
  <<: *build-azure-stretch
  extends: .build official

azure stretch-backports build official:
  <<: *build-azure-stretch-backports
  extends: .build official

azure buster build official:
  <<: *build-azure-buster
  extends: .build official

azure sid build official:
  <<: *build-azure-sid
  extends: .build official

ec2 stretch amd64 build official:
  <<: *build-ec2-amd64-stretch
  extends: .build official

ec2 buster amd64 build official:
  <<: *build-ec2-amd64-buster
  extends: .build official

ec2 sid amd64 build official:
  <<: *build-ec2-amd64-sid
  extends: .build official

gce stretch build official:
  <<: *build-gce-stretch
  extends: .build official

gce buster build official:
  <<: *build-gce-buster
  extends: .build official

gce sid build official:
  <<: *build-gce-sid
  extends: .build official

nocloud stretch amd64 build official:
  <<: *build-nocloud-stretch-amd64
  extends: .build official

nocloud buster amd64 build official:
  <<: *build-nocloud-buster-amd64
  extends: .build official

nocloud sid amd64 build official:
  <<: *build-nocloud-sid-amd64
  extends: .build official

openstack buster amd64 build official:
  <<: *build-openstack-buster-amd64
  extends: .build official

openstack sid amd64 build official:
  <<: *build-openstack-sid-amd64
  extends: .build official

####
# Provider uploads for developer pushs
####

azure upload:
  stage: vendor upload
  image: debian:buster
  script:
    - >
      ./bin/debian-cloud-images upload-azure
      ${CLOUD_UPLOAD_AZURE_AUTH:+--auth "${CLOUD_UPLOAD_AZURE_AUTH}"}
      "${CLOUD_UPLOAD_AZURE_DEV_STORAGE_GROUP}"
      "${CLOUD_UPLOAD_AZURE_DEV_STORAGE_NAME}"
      "${CLOUD_UPLOAD_AZURE_DEV_STORAGE_CONTAINER}"
  dependencies:
    - azure stretch build
    - azure stretch-backports build
    - azure buster build
    - azure sid build
  only:
    refs:
      - pushes
      - web
    variables:
      - $CLOUD_UPLOAD_AZURE_DEV_ENABLED == "1"
  artifacts:
    name: upload_vendor-azure
    expire_in: 7 days
    paths:
      - '*.upload_vendor.json'
  allow_failure: true

ec2 upload:
  stage: vendor upload
  image: debian:buster
  script:
    - >
      echo
      debian-cloud-images upload-ec2
      --regions "'${CLOUD_UPLOAD_EC2_DEV_REGIONS}'"
      "'${CLOUD_UPLOAD_EC2_DEV_BUCKET}'"
    - >
      ./bin/debian-cloud-images upload-ec2
      --regions "${CLOUD_UPLOAD_EC2_DEV_REGIONS}"
      "${CLOUD_UPLOAD_EC2_DEV_BUCKET}"
  dependencies:
    - ec2 stretch amd64 build
    - ec2 buster amd64 build
    - ec2 sid amd64 build
    - ec2 stretch arm64 build
    - ec2 buster arm64 build
    - ec2 sid arm64 build
  only:
    refs:
      - pushes
      - web
    variables:
      - $CLOUD_UPLOAD_EC2_DEV_ENABLED == "1"
  artifacts:
    name: upload_vendor-ec2
    expire_in: 7 days
    paths:
      - '*.upload_vendor.json'
  allow_failure: true

gce upload:
  stage: vendor upload
  image: debian:buster
  script:
    - echo "${CLOUD_UPLOAD_GCE_AUTH}" > .auth
    - >
      ./bin/debian-cloud-images upload-gce
      --auth .auth
      "${CLOUD_UPLOAD_GCE_DEV_PROJECT}" "${CLOUD_UPLOAD_GCE_DEV_BUCKET}"
  dependencies:
    - gce stretch build
    - gce buster build
    - gce sid build
  only:
    refs:
      - pushes
      - web
    variables:
      - $CLOUD_UPLOAD_GCE_DEV_ENABLED == "1"
  artifacts:
    name: upload_vendor-gce
    expire_in: 7 days
    paths:
      - '*.upload_vendor.json'
  allow_failure: true

####
# Provider uploads for daily builds
####

azure upload daily:
  stage: vendor upload
  image: debian:buster
  script:
    # Variables contains secrets!
    - >
      ./bin/debian-cloud-images upload-azure-cloudpartner
      --variant daily
      ${CLOUD_UPLOAD_AZURE_AUTH:+--auth "${CLOUD_UPLOAD_AZURE_AUTH}"}
      ${CLOUD_UPLOAD_AZURE_DAILY_NOTIFY_EMAIL:+--publish "${CLOUD_UPLOAD_AZURE_OFFICIAL_NOTIFY_EMAIL}"}
      "${CLOUD_UPLOAD_AZURE_DAILY_PUBLISHER}"
      "${CLOUD_UPLOAD_AZURE_DAILY_OFFER}"
      "${CLOUD_UPLOAD_AZURE_DAILY_STORAGE_NAME}"
      "${CLOUD_UPLOAD_AZURE_DAILY_STORAGE_CONTAINER}"
      "${CLOUD_UPLOAD_AZURE_DAILY_STORAGE_SECRET}"
  dependencies:
    - azure buster build official
    - azure sid build official
  only:
    refs:
      - schedules@cloud-team/debian-cloud-images
    variables:
      - $CLOUD_UPLOAD_AZURE_DAILY_ENABLED == "1"
  artifacts:
    name: upload_vendor-azure
    expire_in: 7 days
    paths:
      - '*.upload_vendor.json'
  allow_failure: true
